

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>/</id>
  <title>Lil Martin</title>
  <subtitle>一个菜鸡全栈程序员博主。</subtitle>
  <updated>2021-10-07T18:06:44+08:00</updated>
  <author>
    <name>Martin_Du</name>
    <uri>/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en-US"
    href="/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Martin_Du </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Oracle(三)多表查询</title>
    <link href="/posts/Oracle-UnSingleTableQuery/" rel="alternate" type="text/html" title="Oracle(三)多表查询" />
    <published>2021-09-13T21:43:00+08:00</published>
  
    <updated>2021-09-13T21:43:00+08:00</updated>
  
    <id>/posts/Oracle-UnSingleTableQuery/</id>
    <content src="/posts/Oracle-UnSingleTableQuery/" />
    <author>
      <name>Martin_Du</name>
    </author>

  
    
    <category term="sql" />
    
    <category term="oracle" />
    
  

  
    <summary>
      





      多表查

交叉连接  cross join


  ps: 一般不用（因为无用信息太多）


select * from emp cross join dept -- 依次从m行的emp中取一行emp，和n行dept中的每一行进行组合，也就是会产生一个nxm行的表格


-- 根据以上结合的结果，如何查找到Smith的人所在的部门名称
select emp.ename, dept.deptno, dept.dname from emp 
	cross join dept
 where emp.deptno = dept.deptno and emp.ename = 'SMITH';



  缺点：

  
    直接叉乘，得到的是全部集合（数据量太大）
    然后才能where进行条件运算（性能太差）
  


内连接 inner join


  ps: 可简写为join

...
    </summary>
  

  </entry>

  
  <entry>
    <title>Oracle(二)单表查询</title>
    <link href="/posts/Oracle-SingleTableQuery/" rel="alternate" type="text/html" title="Oracle(二)单表查询" />
    <published>2021-09-13T18:30:20+08:00</published>
  
    <updated>2021-09-13T18:30:20+08:00</updated>
  
    <id>/posts/Oracle-SingleTableQuery/</id>
    <content src="/posts/Oracle-SingleTableQuery/" />
    <author>
      <name>Martin_Du</name>
    </author>

  
    
    <category term="sql" />
    
    <category term="oracle" />
    
  

  
    <summary>
      





      单表查询

列的选取-投影

select empno, ename, deptno from emp;



  ps:

  
    开发中一般不使用 *
    数据库中：列名大小写不敏感，内容大小写敏感
  


列别名


  
    方法1：列名+” “+别名
  
  
    方法2：列名 as 别名

    select empno 员工编号, ename 员工姓名 from emp;
select empno as 员工编号, ename as 员工姓名 from emp;
    
  


列的算数表达式(+,-,*,/)

-- 显示年收入
select empno, ename, sal*12 年收入 from emp;



  
    处理空值得函数 nvl() ： null value

    nvl(para1, para2):

   ...
    </summary>
  

  </entry>

  
  <entry>
    <title>Oracle(一)介绍</title>
    <link href="/posts/Oracle-intro/" rel="alternate" type="text/html" title="Oracle(一)介绍" />
    <published>2021-09-13T15:47:01+08:00</published>
  
    <updated>2021-09-13T15:47:01+08:00</updated>
  
    <id>/posts/Oracle-intro/</id>
    <content src="/posts/Oracle-intro/" />
    <author>
      <name>Martin_Du</name>
    </author>

  
    
    <category term="sql" />
    
    <category term="oracle" />
    
  

  
    <summary>
      





      介绍


  Oracle数据库：DB/DBMS

  数据库使用者：DBA（DataBase Administrator）/开发人员

  数据库的种类：oracle / sybase /db2(IBM)

  access,postgreSQL

  数据表：行和列组成

  行：row / record 记录

  列：column / field 字段

  SQL分类：Structured Query Language



    </summary>
  

  </entry>

  
  <entry>
    <title>github-webhook与企业WeChat-webhook中间件开发(四)代码部署到服务器</title>
    <link href="/posts/flask-python-deployment/" rel="alternate" type="text/html" title="github-webhook与企业WeChat-webhook中间件开发(四)代码部署到服务器" />
    <published>2021-08-17T08:16:18+08:00</published>
  
    <updated>2021-08-17T08:16:18+08:00</updated>
  
    <id>/posts/flask-python-deployment/</id>
    <content src="/posts/flask-python-deployment/" />
    <author>
      <name>Martin_Du</name>
    </author>

  
    
    <category term="python-flask" />
    
  

  
    <summary>
      





      编写代码

创建虚拟环境


  mkvirtualenv -p python3 my_env

  进入工作空间 workon my_env


放置代码


  创建一个工作空间放置代码 mkdir pythonWorkSpace(可要可不要，看个人习惯)

  进入刚刚创建的工作空间 cd pythonWorkSpace

  创建一个python文件 vim robort.py

  将代码粘贴到编辑器中


运行代码


  保存并退出编辑模式

  挂载python程序 python robort.py &amp;amp;

  查看进程是否正常 ps -ef|grep python

  如果有之前占用此端口的程序为结束可能会报错

  此时可以找到占用端口进程的pid通过 kill pid 杀死进程

  测试无问题后可将程序在后台挂载 nuhup python robort...
    </summary>
  

  </entry>

  
  <entry>
    <title>github-webhook与企业WeChat-webhook中间件开发(三)编写代码</title>
    <link href="/posts/flask-python-code/" rel="alternate" type="text/html" title="github-webhook与企业WeChat-webhook中间件开发(三)编写代码" />
    <published>2021-08-16T23:16:08+08:00</published>
  
    <updated>2021-08-16T23:16:08+08:00</updated>
  
    <id>/posts/flask-python-code/</id>
    <content src="/posts/flask-python-code/" />
    <author>
      <name>Martin_Du</name>
    </author>

  
    
    <category term="python-flask" />
    
  

  
    <summary>
      





      导入需要的包

import json #用于处理后期传入的json数据
import time #获取当前时间等等
import requests #发送get/post请求 
from flask import Flask, request, jsonify #flask是主要的包
from gevent import pywsgi #必须通过wsgi启动webapp，外网才能访问


编写webApp


app = Flask(__name__)

#外网访问时'ip地址/'可以得到 'hello world' 的响应
@app.route('/')
def hello_world():
    return 'Hello World!'

#外网访问'ip地址/martin'时，触发下面的get_post()方法
@app.route('/martin', methods=...
    </summary>
  

  </entry>

</feed>


