

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>/</id>
  <title>Lil Martin</title>
  <subtitle>一个菜鸡全栈程序员博主。</subtitle>
  <updated>2021-10-11T12:34:17+08:00</updated>
  <author>
    <name>Martin_Du</name>
    <uri>/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en-US"
    href="/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Martin_Du </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Orcale基础(六)rownum与主键设计</title>
    <link href="/posts/Oracle-rownum-pk/" rel="alternate" type="text/html" title="Orcale基础(六)rownum与主键设计" />
    <published>2021-10-11T11:28:00+08:00</published>
  
    <updated>2021-10-11T11:28:00+08:00</updated>
  
    <id>/posts/Oracle-rownum-pk/</id>
    <content src="/posts/Oracle-rownum-pk/" />
    <author>
      <name>Martin_Du</name>
    </author>

  
    
    <category term="sql" />
    
    <category term="oracle" />
    
  

  
    <summary>
      





      主键设计

ROWNUM 和 ROWID

ROWID

特点：唯一，且固定，是在行数据生成时产生的id；

select rowid, empno from emp;
-- 此时的查询结果中，所有行的rowid字段是唯一的
select rowid, empno from emp where empno = 7369;
-- 该结果中
-- empno=7369的rowid 和 
-- 上一条 select 语句结果中empno=7369的rowid 相同



  ROWID是永远不变的， 永远跟行记录走，不因查询条件而变化


ROWNUM

特点：一个伪列，对查询结果返回的行编号即行号，由1开始 依次递增

-- 返回该表全部14条数据
select rownum, emp.* from emp; -- 结果的rownum为1-14
-- 返回部门号为30的6条数据
sele...
    </summary>
  

  </entry>

  
  <entry>
    <title>Orcale基础(五)子查询</title>
    <link href="/posts/Oracle-ChildQuery/" rel="alternate" type="text/html" title="Orcale基础(五)子查询" />
    <published>2021-10-09T23:00:00+08:00</published>
  
    <updated>2021-10-09T23:00:00+08:00</updated>
  
    <id>/posts/Oracle-ChildQuery/</id>
    <content src="/posts/Oracle-ChildQuery/" />
    <author>
      <name>Martin_Du</name>
    </author>

  
    
    <category term="sql" />
    
    <category term="oracle" />
    
  

  
    <summary>
      





      子查询

分为 关联子查询 和 非关联子查询

特点：子查询可以单独执行，其结果作为外部查询的条件。

不相关子查询

概念：子查询不需要与父查询的结果进行比对

-- 查询各个部门薪水最高的员工信息
select * from emp
	where (deptno, sal) in
	(
    	select deptno, max(sal) from emp group by deptno
    )
-- 哪些部门没有员工
select * from dept
	where deptno not in
	(
    	select deptno from emp group by deptno
    )



  整个过程中，父查询的值没有进入子查询


普通 where 条件 子查询

-- 查询所有工资高于FORD的员工信息
select empno,ename,job...
    </summary>
  

  </entry>

  
  <entry>
    <title>Orcale基础(四)约束</title>
    <link href="/posts/Oracle-key/" rel="alternate" type="text/html" title="Orcale基础(四)约束" />
    <published>2021-09-20T16:30:42+08:00</published>
  
    <updated>2021-09-20T16:30:42+08:00</updated>
  
    <id>/posts/Oracle-key/</id>
    <content src="/posts/Oracle-key/" />
    <author>
      <name>Martin_Du</name>
    </author>

  
    
    <category term="sql" />
    
    <category term="oracle" />
    
  

  
    <summary>
      





      约束条件


  主键：primary key（PK）—— unique + not null
  外键：foreign key （FK）
  唯一：unique
  非空：not null
  检查


一些术语

DDL操作

create

create table student(
    id number primary key,
    name varchar2(20),
    email char(40),
    registtime date default sysdate
);


DML操作

insert:


  
    普通插入

    insert into student(id, name, email)
	values(3, 'lilmartin', 'lilmartin@qq.com')
insert into studetn(id, n...
    </summary>
  

  </entry>

  
  <entry>
    <title>Oracle(三)多表查询</title>
    <link href="/posts/Oracle-UnSingleTableQuery/" rel="alternate" type="text/html" title="Oracle(三)多表查询" />
    <published>2021-09-13T21:43:00+08:00</published>
  
    <updated>2021-09-13T21:43:00+08:00</updated>
  
    <id>/posts/Oracle-UnSingleTableQuery/</id>
    <content src="/posts/Oracle-UnSingleTableQuery/" />
    <author>
      <name>Martin_Du</name>
    </author>

  
    
    <category term="sql" />
    
    <category term="oracle" />
    
  

  
    <summary>
      





      多表查

交叉连接  cross join


  ps: 一般不用（因为无用信息太多）


select * from emp cross join dept -- 依次从m行的emp中取一行emp，和n行dept中的每一行进行组合，也就是会产生一个nxm行的表格


-- 根据以上结合的结果，如何查找到Smith的人所在的部门名称
select emp.ename, dept.deptno, dept.dname from emp 
	cross join dept
 where emp.deptno = dept.deptno and emp.ename = 'SMITH';



  缺点：

  
    直接叉乘，得到的是全部集合（数据量太大）
    然后才能where进行条件运算（性能太差）
  


内连接 inner join


  ps: 可简写为join

...
    </summary>
  

  </entry>

  
  <entry>
    <title>Oracle(二)单表查询</title>
    <link href="/posts/Oracle-SingleTableQuery/" rel="alternate" type="text/html" title="Oracle(二)单表查询" />
    <published>2021-09-13T18:30:20+08:00</published>
  
    <updated>2021-09-13T18:30:20+08:00</updated>
  
    <id>/posts/Oracle-SingleTableQuery/</id>
    <content src="/posts/Oracle-SingleTableQuery/" />
    <author>
      <name>Martin_Du</name>
    </author>

  
    
    <category term="sql" />
    
    <category term="oracle" />
    
  

  
    <summary>
      





      单表查询

列的选取-投影

select empno, ename, deptno from emp;



  ps:

  
    开发中一般不使用 *
    数据库中：列名大小写不敏感，内容大小写敏感
  


列别名


  
    方法1：列名+” “+别名
  
  
    方法2：列名 as 别名

    select empno 员工编号, ename 员工姓名 from emp;
select empno as 员工编号, ename as 员工姓名 from emp;
    
  


列的算数表达式(+,-,*,/)

-- 显示年收入
select empno, ename, sal*12 年收入 from emp;



  
    处理空值得函数 nvl() ： null value

    nvl(para1, para2):

   ...
    </summary>
  

  </entry>

</feed>


